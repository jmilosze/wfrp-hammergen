apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hammergen.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hammergen.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "hammergen.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hammergen.labels" . | nindent 8 }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.apiImage.repository }}:{{ .Values.apiImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.apiImage.pullPolicy }}
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /api/keepwarm
              port: 5000
          readinessProbe:
            httpGet:
              path: /api/keepwarm
              port: 5000
          env:
          - name: PORT
            value: "5000"
          - name: ACCESS_TOKEN_EXPIRES_MINUTES
            value: {{ .Values.config.access_token_expires_minutes | quote }}
          - name: REFRESH_TOKEN_EXPIRES_DAYS
            value: {{ .Values.config.refresh_token_expires_days | quote }}
          - name: FLASK_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "hammergen.fullname" . }}
                key: flask_secret_key
          - name: MONGO_URI
            valueFrom:
              secretKeyRef:
                name: {{ include "hammergen.fullname" . }}
                key: mongo_uri
          - name: SENDGRID_API_KEY_2
            valueFrom:
              secretKeyRef:
                name: {{ include "hammergen.fullname" . }}
                key: sendgrid_api_key
          - name: RECAPTCHA_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "hammergen.fullname" . }}
                key: recaptcha_secret
        - name: webserver
          image: "{{ .Values.webserverImage.repository }}:{{ .Values.webserverImage.tag }}"
          imagePullPolicy: {{ .Values.webserverImage.pullPolicy }}
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-config
            - mountPath: /dist
              name: dist
      initContainers:
        - name: dist
          image: "{{ .Values.distImage.repository }}:{{ .Values.distImage.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.distImage.pullPolicy }}
          volumeMounts:
            - mountPath: /dist
              name: dist
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "hammergen.fullname" . }}
        - name: dist
          emptyDir: { }
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
