import { selectRandom } from "../../../utils/randomUtils";
import * as c from "../characterConstants";

const HUMAN_EMPIRE_MALE_FORENAMES = [
  "Adhemar",
  "Andres",
  "Artur",
  "Detlev",
  "Frederich",
  "Gerner",
  "Heinrich",
  "Henryk",
  "Karl",
  "Kruger",
  "Sebastien",
  "Talther",
  "Ulrich",
  "Werther",
  "Wilryn",
  "Admund",
  "Calvin",
  "Dekmar",
  "Dietrich",
  "Edgar",
  "Edwin",
  "Fosten",
  "Gismar",
  "Harman",
  "Henlyn",
  "Hugo",
  "Lutolf",
  "Manfred",
  "Oswald",
  "Reinhard",
];

const HUMAN_EMPIRE_FEMALE_FORENAMES = [
  "Beatrijs",
  "Clementia",
  "Erika",
  "Frauke",
  "Gertraud",
  "Haletha",
  "Helga",
  "Irmina",
  "Jehanne",
  "Lorelay",
  "Marieke",
  "Sigfreda",
  "Talunda",
  "Ulrika",
  "Willelma",
  "Ada",
  "Berlinda",
  "Carlinda",
  "Drachilda",
  "Elinor",
  "Frieda",
  "Isabella",
  "Kristen",
  "Lenora",
  "Marien",
  "Olga",
  "Rosabel",
  "Sigrid",
  "Sigunda",
  "Ursula",
];

const HUMAN_EMPIRE_SURNAMES = [
  "Bauer",
  "Fleischer",
  "Schmidt",
  "Schuster",
  "Lang",
  "Augenlos",
  "Dunn",
  "Laut",
  "Stark",
  "Muller",
  "Schneider",
  "Fischer",
  "Weber",
  "Meyer",
  "Wagner",
  "Schulz",
  "Becker",
  "Hoffmann",
  "Adelhof",
  "Bacher",
  "Betz",
  "Dahmbach",
  "Durrbein",
  "Fiegler",
  "Gaertner",
  "Herzog",
  "Liess",
  "Neumann",
  "Neumann",
  "Shaumer",
  "Trachsel",
  "Widmann",
];

const HUMAN_TILEA_MALE_FORENAMES = [
  "Ambrogio",
  "Antonius",
  "Balsamo",
  "Bartolommeo",
  "Bonanno",
  "Brancaleone",
  "Ettore",
  "Franchino",
  "Galasso",
  "Grifo",
  "Guglielmo",
  "Jacobello",
  "Lenuzo",
  "Luchinus",
  "Marino",
  "Melmoth",
  "Mercuzio",
  "Montoni",
  "Oliverotto",
  "Paganinus",
  "Pantaleo",
  "Pintaldi",
  "Ravaglioli",
  "Rinaldo",
  "Saraceno",
  "Scarletto",
  "Schedoni",
  "Smarra",
  "Torchitorio",
  "Vatheck",
  "Ysidro",
  "Zenobio",
  "Zschokke",
];

const HUMAN_TILEA_FEMALE_FORENAMES = [
  "Agnese",
  "Agnola",
  "Altapasqua",
  "Amellina",
  "Antonia",
  "Belcolore",
  "Bianca",
  "Cherubina",
  "Cicilia",
  "Corelia",
  "Ermellina",
  "Flaminea",
  "Flora",
  "Foscarina",
  "Francesca",
  "Ghisolabella",
  "Julietta",
  "Junipera",
  "Liona",
  "Lucretia",
  "Mathilda",
  "Mira",
  "Olympia",
  "Pantasilea",
  "Pia",
  "Pomellina",
  "Rigarda",
  "Smeralda",
  "Sofia",
  "Vannozza",
  "Vermilia",
  "Veronica",
  "Zebaina",
];

const HUMAN_TILEA_SURNAMES = [
  "Acciaioli",
  "Acerbi",
  "Albano",
  "Alberti",
  "d’Amoto",
  "Barbacia",
  "Barbigia",
  "Barbolini",
  "Bellegno",
  "Bianco",
  "Boccole",
  "Calbo",
  "Calcagnini",
  "Calvis",
  "Capello",
  "Corbo",
  "Fabbro",
  "Figino",
  "Filago",
  "Filiarchi",
  "Fiolo",
  "Firavanti",
  "Foscari",
  "Fulci",
  "Guerra",
  "Malatesta",
  "Marsillach",
  "Molino",
  "Pentangeli",
  "Rosso",
  "Udolpho",
  "Vitelli",
  "Zeluco",
];

const HUMAN_NORSCA_MALE_FORENAMES = [
  "Aeson",
  "Alfkaell",
  "Asbjorn",
  "Arbaal",
  "Björn",
  "Braese",
  "Cormac",
  "Dargo",
  "Dreng",
  "Egill",
  "Einarr",
  "Ekil",
  "Engra",
  "Eogric",
  "Erik",
  "Fálki",
  "Friðrik",
  "Garmr",
  "Gnupa",
  "Gotric",
  "Grettir",
  "Hafdan",
  "Hákon",
  "Halfdane",
  "Hallbjörn",
  "Halldór",
  "Hargir",
  "Hinrik",
  "Hjörtur",
  "Hrafn",
  "Hreðric",
  "Hroðgar",
  "Ingvar",
  "Ivar",
  "Kar",
  "Ketil",
  "Kettri",
  "Kharan",
  "Knut",
  "Kueldulf",
  "Lief",
  "Lud",
  "Morkar",
  "Oflati",
  "Orgrim",
  "Óskar",
  "Rafn",
  "Ragnar",
  "Ranulf",
  "Raskulf",
  "Rasmus",
  "Redwald",
  "Scyla",
  "Sigdun",
  "Sigvald",
  "Sindri",
  "Sitric",
  "Skuld",
  "Sorkvir",
  "Spjall",
  "Storulf",
  "Sven",
  "Torgald",
  "Trygve",
  "Tulkir",
  "Ulf",
  "Urlf",
  "Valnir",
  "Viglundr",
];

const HUMAN_NORSCA_FEMALE_FORENAMES = [
  "Anna",
  "Aðalbjörg",
  "Ásdís",
  "Asta",
  "Ástrid",
  "Auðr",
  "Bera",
  "Birna",
  "Bodil",
  "Brynja",
  "Dagny",
  "Drífa",
  "Emla",
  "Eríka",
  "Eydís",
  "Finna",
  "Friðr",
  "Gierdriful",
  "Göndul",
  "Gro",
  "Gunhild",
  "Gunnr",
  "Guðlaug",
  "Guðrún",
  "Halga",
  "Hela",
  "Herja",
  "Hildr",
  "Hilga",
  "Hjördis",
  "Hygd",
  "Inga",
  "Kára",
  "Kindra",
  "Lilja",
  "Liv",
  "Mist",
  "Neigla",
  "Pála",
  "Prima",
  "Ragnhildur",
  "Randgrid",
  "Randi",
  "Reginleif",
  "Revna",
  "Róta",
  "Shaarna",
  "Sif",
  "Signe",
  "Sigrid",
  "Sigrdrífa",
  "Sigrún",
  "Skögul",
  "Solveig",
  "Svanhildur",
  "Svipul",
  "Tora",
  "Tove",
  "Valdís",
  "Valkia",
  "Vigdís",
  "Tuula",
  "Urda",
  "Ulfhild",
];

const HALFLING_MALE_FORENAMES = [
  "Aldebrand (Aldo)",
  "Axelbrand (Ax)",
  "Balthasar (Bally)",
  "Bartomar (Bart)",
  "Engelbrecht (Gelb)",
  "Erkenbrand (Ken)",
  "Eustasius (Tass)",
  "Ferdinand (Fred)",
  "Giselbrecht (Sel)",
  "Heironymus (Hiro)",
  "Hildemund (Hil)",
  "Konradin (Kon)",
  "Maximilian (Max)",
  "Nathandar (Nat)",
  "Nicodemus (Nick)",
  "Randulf (Randy)",
  "Sebastian (Seb)",
  "Siegmund (Siggy)",
  "Theoderic (Derek)",
  "Teodosius (Teo)",
  "Volkhard (Vee)",
];
const HALFLING_FEMALE_FORENAMES = [
  "Annabella (Bella)",
  "Antoniella (Anni)",
  "Brunhilda (Hilda)",
  "Clothilda (Clotha)",
  "Desdemona (Desde)",
  "Emagunda (Eda)",
  "Ermintrude (Mindy)",
  "Esmerelda (Esme)",
  "Friedhilda (Hilda)",
  "Grizelda (Gelda)",
  "Hildegund (Hil)",
  "Keterlyn (Lyn)",
  "Lucretia (Lucia)",
  "Maghilda (Magga)",
  "Melicent (Meli)",
  "Ottagunda (Otta)",
  "Petronella (Petra)",
  "Philomelia (Philly)",
  "Rosalinde (Rosa)",
  "Sigismunda (Sigi)",
  "Tomasina (Tina)",
  "Wilhelmina (Willa)",
];
const HALFLING_SURNAMES = [
  "Alderberry",
  "Alepuddle",
  "Appleback",
  "Barleycorn",
  "Barncock",
  "Bayleaf",
  "Bloomberry",
  "Bracebelly",
  "Braidgirdle",
  "Bramble",
  "Bunbury",
  "Burrows",
  "Catkins",
  "Churnhill",
  "Cinderhill",
  "Clinchstick",
  "Clumpthisle",
  "Codgerman",
  "Crabapple",
  "Croop",
  "Crumbuckle",
  "Crumbly",
  "Curlytoes",
  "Custard",
  "Dibbly",
  "Dibbly-Firkin",
  "Dimmock",
  "Darkwater",
  "Dogberry",
  "Downhill",
  "Downside",
  "Duckweed",
  "Fairtrot",
  "Farfield",
  "Farthingale",
  "Fastbuck",
  "Fetlock",
  "Finefettle",
  "Firkin",
  "Follyfoot",
  "Furrows",
  "Girthtree",
  "Gumbucket",
  "Guzzlewit",
  "Greenacre",
  "Greenapple",
  "Greenhill",
  "Grogbelly",
  "Grubb",
  "Grumble",
  "Harfoot",
  "Haricot",
  "Havelock",
  "Hempfire",
  "Hornblower",
  "Kettlebright",
  "Lackstern",
  "Larkspur",
  "Lilywhite",
  "Longbelt",
  "Longchalk",
  "Manglepie",
  "Marrow",
  "Meadowdown",
  "Meadowsweet",
  "Millpond",
  "Muggins",
  "Mugwort",
  "Neddly",
  "Oddfoot",
  "Overhill",
  "Patchpetal",
  "Pennyman",
  "Quickblossom",
  "Quiggly",
  "Quivergrass",
  "Rattlebone",
  "Ridgepole",
  "Riverbank",
  "Rook",
  "Rumplebreek",
  "Sandyhill",
  "Shakebelly",
  "Shufflefoot",
  "Sparrow",
  "Stonewort",
  "Tallowman",
  "Talltree",
  "Tanglefoot",
  "Thistlewood",
  "Thornpocket",
  "Tumblewine",
  "Tumpwell",
  "Whiteflower",
  "Whitethorn",
  "Widgeon",
  "Willowand",
  "Winchgirdle",
  "Windblossom",
  "Wrickleberry",
  "Ashfield",
  "Brandysnap",
  "Hayfoot",
  "Rumster",
  "Shortbottom",
  "Thorncobble",
];

const DWARF_ELEMENT_1 = [
  "Al",
  "Ath",
  "Athran",
  "Bal",
  "Bala",
  "Bara",
  "Bel",
  "Bela",
  "Ber",
  "Bok",
  "Bor",
  "Bur",
  "Da",
  "Dam",
  "Dora",
  "Drok",
  "Drong",
  "Dur",
  "Dwal",
  "El",
  "Ela",
  "Elan",
  "Elda",
  "Fa",
  "Far",
  "Fara",
  "Fim",
  "Fima",
  "Firen",
  "Fur",
  "Fura",
  "Ga",
  "Gim",
  "Gol",
  "Gollen",
  "Got",
  "Gota",
  "Grim",
  "Gro",
  "Grun",
  "Hak",
  "Haka",
  "Har",
  "Hega",
  "Hur",
  "Kad",
  "Kar",
  "Kata",
  "Kaz",
  "Kaza",
  "Krag",
  "Logaz",
  "Lok",
  "Lun",
  "Mo",
  "Mola",
  "Mor",
  "Mora",
  "No",
  "Nola",
  "Nor",
  "Noran",
  "Nun",
  "Oda",
  "Oka",
  "Olla",
  "Olf",
  "Oth",
  "Othra",
  "Ro",
  "Ror",
  "Roran",
  "Ska",
  "Skalla",
  "Skalf",
  "Skar",
  "Skor",
  "Skora",
  "Snor",
  "Snora",
  "Sven",
  "Thar",
  "Thor",
  "Thora",
  "Thron",
  "Thrun",
  "Thura",
  "Un",
  "Utha",
  "Ulla",
  "Vala",
  "Var",
  "Vara",
  "Zak",
  "Zaka",
  "Zakan",
  "Zar",
  "Zara",
  "Zam",
  "Zama",
  "Bron",
  "Dim",
  "Gud",
];

const DWARF_ELEMENT_MALE = [
  "bin",
  "bor",
  "dil",
  "din",
  "dok",
  "dor",
  "drin",
  "fin",
  "gan",
  "gar",
  "gil",
  "gin",
  "gni",
  "grom",
  "grond",
  "groth",
  "grum",
  "grund",
  "grunt",
  "gon",
  "gor",
  "grim",
  "grin",
  "gul",
  "gun",
  "gund",
  "ki",
  "kin",
  "krag",
  "kri",
  "krin",
  "li",
  "lin",
  "lik",
  "lok",
  "lun",
  "min",
  "mir",
  "nin",
  "nir",
  "rag",
  "ri",
  "rig",
  "rik",
  "rin",
  "run",
  "skin",
  "tin",
  "tok",
  "trek",
  "trok",
  "zin",
  "zor",
  "zad",
  "tri",
];

const DWARF_ELEMENT_FEMALE = [
  "bina",
  "bora",
  "dila",
  "dina",
  "dokina",
  "dora",
  "drinella",
  "fina",
  "fya",
  "gana",
  "gara",
  "gella",
  "gina",
  "groma",
  "grondella",
  "grotha",
  "gruma",
  "grunda",
  "gruntina",
  "gona",
  "gora",
  "grimella",
  "grina",
  "gromina",
  "gula",
  "gunella",
  "gundina",
  "kina",
  "kragella",
  "krina",
  "kya",
  "lina",
  "likina",
  "loka",
  "luna",
  "mina",
  "mira",
  "nina",
  "nira",
  "nya",
  "ragina",
  "riga",
  "rika",
  "rina",
  "runa",
  "runella",
  "skina",
  "skinella",
  "tina",
  "toka",
  "trekella",
  "trekina",
  "troka",
  "zina",
  "zora",
  "da",
  "na",
];

const DWARF_NICKNAMES = [
  "Blackhand",
  "Axebringer",
  "Finehand",
  "Forkbread",
  "Ironbraid",
  "Redhammer",
  "Stonefist",
  "Ironfist",
  "Redaxe",
  "Longbreard",
  "Hammersmith",
  "Runesmith",
  "Ironbrow",
  "Redbrow",
  "Grudgebearer",
  "Lawbringer",
  "Frostaxe",
  "Frosthammer",
  "Frostbrow",
  "Sunbraid",
  "Frostbeard",
];

const DWARF_NICKNAME_PROB = 0.2;

const HIGH_ELF_SURNAMES = [
  "Emberfall",
  "Fireborn",
  "Foamheart",
  "Goldenhair",
  "Silverspray",
  "Spellsign",
  "Bluefeather",
  "Bravestar",
  "Brightcrown",
  "Brightknife",
  "Brightwand",
  "Coolwater",
  "Darkmoon",
  "Eldendrake",
  "Fastblade",
  "Hawkstar",
  "Keeneye",
  "Keensight",
  "Palewand",
  "Purelight",
  "Shadowstar",
  "Sharpblade",
  "Starfire",
  "Silverhair",
  "Swiftwing",
  "Youngstar",
];

const WOOD_ELF_SURNAMES = [
  "Fleetriver",
  "Shadowstalker",
  "Treeshaper",
  "Weavewatcher",
  "Willowlimb",
  "Windrunner",
  "Blackwood",
  "Boldheart",
  "Boldspear",
  "Bravehelm",
  "Coolstream",
  "Darkeagle",
  "Fleetfoot",
  "Gladwind",
  "Goodroot",
  "Greendale",
  "Greenfeather",
  "Greenglade",
  "Lightfoot",
  "Shadowhelm",
  "Slendertree",
  "Soaringleaf",
  "Strongarrow",
  "Silverleaf",
  "Swiftbow",
  "Youngleaf",
];

const GNOME_MALE_FORENAMES = [
  "Breward",
  "Daveth",
  "Gwinear",
  "Mawnan",
  "Meriasek",
  "Nivet",
  "Talan",
  "Ythel",
  "Glimbrin",
];
const GNOME_FEMALE_FORENAMES = [
  "Elowen",
  "Ia",
  "Kerra",
  "Ladoca",
  "Metheven",
  "Morwen",
  "Steren",
  "Tryfena",
  "Aren",
  "Berowen",
];
const GNOME_NICKNAMES = [
  "Mudfoot",
  "Glittereye",
  "Soleheart",
  "Patchcloak",
  "Fancyvest",
  "Largehat",
  "Blackboot",
  "Goldhand",
  "Smallshadow",
  "Longnose",
];
const GNOME_CLANS = ["Annearil", "Frayne", "Hawken", "Landweth", "Peddlar", "Scantleburn", "Thorne", "Trethewey"];

const GNOME_NICKNAME_PROB = 0.5;

const OGRE_ELEMENT_1 = [
  "Ar",
  "Grum",
  "Nar",
  "Tar",
  "Verm",
  "Ag",
  "Gurz",
  "Narg",
  "Tag",
  "Vug",
  "Az",
  "Hroth",
  "Nag",
  "Tazag",
  "Vuz",
  "Bargh",
  "Keggur",
  "Nagar",
  "Teg",
  "Vuzzig",
  "Blag",
  "Kug",
  "Naz",
  "Terg",
  "Yar",
  "Boz",
  "Kuz",
  "Nartha",
  "Thar",
  "Yamith",
  "Bur",
  "Mag",
  "Ner",
  "Thag",
  "Yer",
  "Dar",
  "Mar",
  "Nerg",
  "Thaz",
  "Yeg",
  "Dergh",
  "Margh",
  "Neggim",
  "Thegiz",
  "Yorgh",
  "Duth",
  "Meg",
  "Nur",
  "Ther",
  "Yorz",
  "Far",
  "Merrig",
  "Nug",
  "Thug",
  "Yur",
  "Feg",
  "Mor",
  "Nuggith",
  "Torg",
  "Yug",
  "Fer",
  "Morg",
  "Rar",
  "Torz",
  "Yuz",
  "Fog",
  "Morz",
  "Rag",
  "Tur",
  "Zar",
  "Fuzgh",
  "Mug",
  "Raggim",
  "Turg",
  "Zargh",
  "Gar",
  "Murg",
  "Raz",
  "Tuz",
  "Zag",
  "Gagh",
  "Murgog",
  "Razog",
  "Var",
  "Zer",
  "Geg",
  "Murz",
  "Rer",
  "Varg",
  "Zeg",
  "Gez",
  "Muz",
  "Reg",
  "Varz",
  "Zog",
  "Gorg",
  "Murthig",
  "Skr",
  "Ver",
  "Zor",
];
const OGRE_ELEMENT_2 = [
  "abba",
  "ebb",
  "getha",
  "ork",
  "thruta",
  "addoo",
  "edd",
  "gothish",
  "ort",
  "thrush",
  "akka",
  "ek",
  "gratoo",
  "orth",
  "ubbsh",
  "ag",
  "elg",
  "grethi",
  "ott",
  "uddoo",
  "alloo",
  "ell",
  "grothoo",
  "rag",
  "ulgoo",
  "alta",
  "elt",
  "gruta",
  "reg",
  "ulloo",
  "algoo",
  "elg",
  "guta",
  "ret",
  "ultsh",
  "alza",
  "elz",
  "guttash",
  "reth",
  "ulgi",
  "angoosh",
  "eng",
  "obbi",
  "rob",
  "ulzish",
  "annash",
  "emm",
  "oddi",
  "rok",
  "ungish",
  "argo",
  "enn",
  "okka",
  "roth",
  "unnoo",
  "argani",
  "erg",
  "olgish",
  "rug",
  "urga",
  "argloo",
  "ergl",
  "olloo",
  "ruk",
  "urka",
  "arki",
  "erk",
  "oltush",
  "rut",
  "urthoo",
  "arkash",
  "erkag",
  "olgtha",
  "rutag",
  "urthu",
  "arkuga",
  "ert",
  "olthi",
  "tag",
  "urthagish",
  "artha",
  "erth",
  "onga",
  "teg",
  "urutoo",
  "artaga",
  "ett",
  "onni",
  "thorg",
  "uruzi",
  "arthash",
  "ew",
  "orgoo",
  "throg",
  "uttish",
  "attha",
  "gat",
  "orglish",
  "throt",
  "yogg",
];

const OGRE_CLANS = ["Goldtooth", "Ironskin", "Thundermaw", "Bloodguzzler", "Eyebiter", "Onetusk", "Bullgorger"];
const OGRE_BIG_NAMES = [
  "Mawseeker",
  "Daemonswallower",
  "Giantbreaker",
  "Ghoultosser",
  "Deathcheater",
  "Longstrider",
  "Beastkiller",
  "Brawlerguts",
];

const OGRE_BIG_NAME_PROB = 0.5;

const ELF_ELEMENT_1 = ["Aes", "Ath", "Dor", "Far", "Gal", "Im", "Lin", "Mal", "Mor", "Ullia"];
const ELF_ELEMENT_2 = ["a", "ath", "dia", "en", "for", "lor", "mar", "ol", "sor", "than"];
const HIGH_ELF_ENDINGS = ["andril", "anel", "ellion", "fin", "il", "irian", "mor", "nil", "ric", "wing"];
const WOOD_ELF_ENDINGS = ["arha", "anhu", "dda", "han", "loc", "noc", "oth", "ryn", "stra", "wyth"];

function generateHumanEmpireName(gender) {
  let forename;
  if (gender === c.MALE) {
    forename = selectRandom(HUMAN_EMPIRE_MALE_FORENAMES);
  } else {
    forename = selectRandom(HUMAN_EMPIRE_FEMALE_FORENAMES);
  }
  let surname = selectRandom(HUMAN_EMPIRE_SURNAMES);

  return forename + " " + surname;
}

function generateHumanTileaName(gender) {
  let forename;
  if (gender === c.MALE) {
    forename = selectRandom(HUMAN_TILEA_MALE_FORENAMES);
  } else {
    forename = selectRandom(HUMAN_TILEA_FEMALE_FORENAMES);
  }
  let surname = selectRandom(HUMAN_TILEA_SURNAMES);

  return forename + " " + surname;
}

function generateHumanNorscaName(gender) {
  let forename;
  if (gender === c.MALE) {
    forename = selectRandom(HUMAN_NORSCA_MALE_FORENAMES);
  } else {
    forename = selectRandom(HUMAN_NORSCA_FEMALE_FORENAMES);
  }

  let surname;
  let ancestorGender = selectRandom([c.MALE, c.FEMALE]);
  if (ancestorGender === c.MALE) {
    let ancestorForename = selectRandom(HUMAN_NORSCA_MALE_FORENAMES);
    surname = ancestorForename + selectRandom(["sson", "snev"]);
  } else {
    let ancestorForename = selectRandom(HUMAN_NORSCA_FEMALE_FORENAMES);
    surname = ancestorForename + selectRandom(["sdottir", "sniz"]);
  }

  return forename + " " + surname;
}

function generateHalflingName(gender) {
  let forename;
  if (gender === c.MALE) {
    forename = selectRandom(HALFLING_MALE_FORENAMES);
  } else {
    forename = selectRandom(HALFLING_FEMALE_FORENAMES);
  }
  let surname = selectRandom(HALFLING_SURNAMES);

  return forename + " " + surname;
}

function generateHighElfName() {
  let forename = selectRandom(ELF_ELEMENT_1) + selectRandom(ELF_ELEMENT_2) + selectRandom(HIGH_ELF_ENDINGS);
  return forename + " " + selectRandom(HIGH_ELF_SURNAMES);
}

function generateWoodElfName() {
  let forename = selectRandom(ELF_ELEMENT_1) + selectRandom(ELF_ELEMENT_2) + selectRandom(WOOD_ELF_ENDINGS);
  return forename + " " + selectRandom(WOOD_ELF_SURNAMES);
}

function generateDwarfName(gender) {
  let elementTables = [DWARF_ELEMENT_MALE, DWARF_ELEMENT_FEMALE];
  let forename = selectRandom(DWARF_ELEMENT_1) + selectRandom(elementTables[gender]);

  let surname;
  if (Math.random() < DWARF_NICKNAME_PROB) {
    surname = selectRandom(DWARF_NICKNAMES);
  } else {
    let ancestorGender = selectRandom([0, 1]);
    let ancForename = selectRandom(DWARF_ELEMENT_1) + selectRandom(elementTables[ancestorGender]);
    let suffix = gender === 0 ? selectRandom(["sson", "snev"]) : selectRandom(["sdottir", "sniz"]);
    surname = ancForename + suffix;
  }
  return forename + " " + surname;
}

function generateGnomeName(gender) {
  let forenameTables = [GNOME_MALE_FORENAMES, GNOME_FEMALE_FORENAMES];
  let forename = selectRandom(forenameTables[gender]);
  let surname = selectRandom(GNOME_CLANS);

  if (Math.random() < GNOME_NICKNAME_PROB) {
    return forename + " (" + selectRandom(GNOME_NICKNAMES) + ") " + surname;
  } else {
    return forename + " " + surname;
  }
}

function generateOgreName() {
  const forename = selectRandom(OGRE_ELEMENT_1) + selectRandom(OGRE_ELEMENT_2);
  const clan = selectRandom(OGRE_CLANS);

  if (Math.random() < OGRE_BIG_NAME_PROB) {
    return forename + " " + clan + ", the " + selectRandom(OGRE_BIG_NAMES);
  } else {
    return forename + " " + clan;
  }
}

export default function generateName(speciesWithRegion, gender) {
  let selectedGender = gender;
  if (gender === 2) {
    selectedGender = Math.floor(Math.random() * 2);
  }

  if (c.HUMAN_LIST.includes(speciesWithRegion)) {
    if (speciesWithRegion === c.HUMAN_TILEA) {
      return generateHumanTileaName(selectedGender);
    }

    if ([c.HUMAN_NORSE_BJORNLING, c.HUMAN_NORSE_SARL, c.HUMAN_NORSE_SKAELING].includes(speciesWithRegion)) {
      return generateHumanNorscaName(selectedGender);
    }

    return generateHumanEmpireName(selectedGender);
  }

  if (c.HALFLING_LIST.includes(speciesWithRegion)) {
    return generateHalflingName(selectedGender);
  }

  if (c.DWARF_LIST.includes(speciesWithRegion)) {
    return generateDwarfName(selectedGender);
  }

  if (c.HIGH_ELF_LIST.includes(speciesWithRegion)) {
    return generateHighElfName();
  }

  if (c.WOOD_ELF_LIST.includes(speciesWithRegion)) {
    return generateWoodElfName();
  }

  if (c.GNOME_DEFAULT.includes(speciesWithRegion)) {
    return generateGnomeName(selectedGender);
  }

  if (c.OGRE_LIST.includes(speciesWithRegion)) {
    return generateOgreName();
  }

  return "";
}
